*********************TASK01****************
#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    Node* prev;
};


void printList(Node* head) {
    if (head == NULL) {
        cout << "Doubly linked list is empty" << endl;
        return;
    }
    Node* temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}


Node* deleteAtEnd(Node* head) {
    if (head == NULL) {
        cout << "List is empty, nothing to delete!" << endl;
        return head;
    }

    Node* temp = head;

    
    if (head->next == NULL) {
        delete head;
        return NULL;
    }

   
    while (temp->next != NULL) {
        temp = temp->next;
    }

    
    temp->prev->next = NULL;
    delete temp;

    return head;
}



Node* insertEnd(Node* head, int value) {
    Node* newNode = new Node();
    newNode->data = value;
    newNode->next = NULL;

    if (head == NULL) {
        newNode->prev = NULL;
        return newNode;
    }

    Node* temp = head;
    while (temp->next != NULL) {
        temp = temp->next;
    }

    temp->next = newNode;
    newNode->prev = temp;
    return head;
}

int main() {
    Node* head = NULL;
    int n, value;

    cout << "Enter number of nodes: ";
    cin >> n;

    for (int i = 0; i < n; i++) {
        cout << "Enter value for node " << i + 1 << ": ";
        cin >> value;
        head = insertEnd(head, value);
    }

    cout << "Doubly Linked List before deletion: ";
    printList(head);

    head = deleteAtEnd(head);

    cout << "Doubly Linked List after deletion: ";
    printList(head);

    return 0;
}
